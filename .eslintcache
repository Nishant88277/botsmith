[{"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\index.js":"1","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\App.js":"2","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Dashboard\\index.js":"3","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Dashboard\\style.js":"4","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Header\\index.js":"5","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Designer\\index.js":"6","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\BotSidebar\\index.js":"7","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Sidebar\\index.js":"8","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Bot-listing\\index.js":"9","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Template-listing\\index.js":"10","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Container\\BotDesigner\\index.js":"11","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\BotSidebar\\style.js":"12","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Header\\style.js":"13","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Template-listing\\style.js":"14","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Sidebar\\style.js":"15","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Container\\BotDesigner\\style.js":"16","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Container\\ModuleHeading\\index.js":"17","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Container\\ModuleCard\\index.js":"18","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\BotRightSidebar\\index.js":"19","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Container\\ModuleHeading\\style.js":"20","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Container\\ModuleCard\\style.js":"21","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\BotRightSidebar\\style.js":"22"},{"size":207,"mtime":1608231294050,"results":"23","hashOfConfig":"24"},{"size":483,"mtime":1615710859149,"results":"25","hashOfConfig":"24"},{"size":2143,"mtime":1615639345399,"results":"26","hashOfConfig":"24"},{"size":182,"mtime":1608462337703,"results":"27","hashOfConfig":"24"},{"size":7150,"mtime":1611943283842,"results":"28","hashOfConfig":"24"},{"size":1751,"mtime":1608463164077,"results":"29","hashOfConfig":"24"},{"size":13726,"mtime":1615658220619,"results":"30","hashOfConfig":"24"},{"size":3681,"mtime":1611665028184,"results":"31","hashOfConfig":"24"},{"size":8132,"mtime":1611942144109,"results":"32","hashOfConfig":"24"},{"size":8280,"mtime":1608472146171,"results":"33","hashOfConfig":"24"},{"size":3485,"mtime":1615714762424,"results":"34","hashOfConfig":"24"},{"size":1283,"mtime":1612809858245,"results":"35","hashOfConfig":"24"},{"size":2563,"mtime":1611677606743,"results":"36","hashOfConfig":"24"},{"size":1527,"mtime":1608470965959,"results":"37","hashOfConfig":"24"},{"size":1627,"mtime":1611677662875,"results":"38","hashOfConfig":"24"},{"size":983,"mtime":1614499418303,"results":"39","hashOfConfig":"24"},{"size":450,"mtime":1608464480203,"results":"40","hashOfConfig":"24"},{"size":679,"mtime":1608306702991,"results":"41","hashOfConfig":"24"},{"size":13317,"mtime":1615714683493,"results":"42","hashOfConfig":"24"},{"size":201,"mtime":1608303755205,"results":"43","hashOfConfig":"24"},{"size":735,"mtime":1608307313482,"results":"44","hashOfConfig":"24"},{"size":2428,"mtime":1615711863791,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"h7hfst",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\index.js",[],["93","94"],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\App.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Dashboard\\index.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Dashboard\\style.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Header\\index.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Designer\\index.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\BotSidebar\\index.js",["95"],"import React, {useState, useEffect} from \"react\";\r\n\r\n// --image--\r\nimport SearchIcon from \"../../Assets/images/search-icon.svg\";\r\nimport DatabaseIcon from \"../../Assets/images/database-icon.svg\";\r\nimport DropdownIcon from \"../../Assets/images/dropdown-icon.svg\";\r\nimport BackGreyIcon from \"../../Assets/images/backgrey-icon.svg\";\r\nimport CloseIcon from \"../../Assets/images/close-icon.svg\";\r\n\r\n// --style--\r\nimport BotSidebarStyle from \"./style\";\r\n\r\nconst DATABASE = \"database\";\r\nconst FEEDS = \"feeds\";\r\nconst CUSTOMGUI = \"customgui\";\r\nconst SCRIPT = \"script\";\r\nconst COMMUNICATE = \"communicate\";\r\nconst DESCISION = \"decision\";\r\n\r\nlet categoryArr = [\r\n    {\r\n        type: DATABASE,\r\n        name: \"Database\",\r\n        icon: DatabaseIcon,\r\n        subCategories: [\r\n            {\r\n                name: \"My-Sql\",\r\n                showActions: false,\r\n                actions: [\r\n                    {\r\n                        name: \"select\",\r\n                    },\r\n                    {\r\n                        name: \"save\",\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        type: FEEDS,\r\n        name: \"Feeds\",\r\n        icon: DatabaseIcon,\r\n        subCategories: [\r\n            {\r\n                name: \"RSS\",\r\n                showActions: false,\r\n                actions: [\r\n                    {\r\n                        name: \"Watch\",\r\n                    }\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        type: CUSTOMGUI,\r\n        name: \"Custom GUI\",\r\n        icon: DatabaseIcon,\r\n        subCategories: [\r\n            {\r\n                name: \"News Action Intel\",\r\n                showActions: false,\r\n                actions: [\r\n                    {\r\n                        name: \"Save News\"\r\n                    },\r\n                    {\r\n                        name: \"Fetch Assets\"\r\n                    },\r\n                    {\r\n                        name: \"Fetch Watchwords\"\r\n                    },\r\n                    {\r\n                        name: \"Save Matched News\"\r\n                    },\r\n                    {\r\n                        name: \"Publish News to Portal\"\r\n                    }\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        type: SCRIPT,\r\n        name: \"Script\",\r\n        icon: DatabaseIcon,\r\n        subCategories: [\r\n            {\r\n                name: \"Python\",\r\n                showActions: false,\r\n                actions: [\r\n                    {\r\n                        name: \"Execute\",\r\n                    }\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        type: COMMUNICATE,\r\n        name: \"Communicate\",\r\n        icon: DatabaseIcon,\r\n        subCategories: [\r\n            {\r\n                name: \"Email\",\r\n                showActions: false,\r\n                actions: [\r\n                    {\r\n                        name: \"Send\",\r\n                    }\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        type: DESCISION,\r\n        name: \"Decision\",\r\n        icon: DatabaseIcon,\r\n        subCategories: [\r\n            {\r\n                name: \"Match\",\r\n                showActions: false,\r\n                actions: [\r\n                    {\r\n                        name: \"Text\",\r\n                    }\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n]\r\n\r\nfunction BotSidebar(props) {\r\n    const [Type, setType] = useState(\"\");\r\n    const [Search, setSearch] = useState(\"\");\r\n    const [Actions, setActions] = useState(false);\r\n    const [Categories, setCategories] = useState(categoryArr);\r\n\r\n    const handleBack = () => {\r\n        if (Type !== \"\") {\r\n            setType(\"\");\r\n            setActions(false);\r\n            setCategories(categoryArr)\r\n        }\r\n    };\r\n\r\n    const handleSearch = (e) => {\r\n        setSearch(e.target.value);\r\n    };\r\n\r\n    // Call after setSearch\r\n    useEffect(() => {\r\n        if (Search !== \"\") {\r\n            setCategories(\r\n                Categories.filter((category) => {\r\n                    return (category.subCategories.some((subcategory) => {\r\n                        return subcategory.name\r\n                            .toLocaleLowerCase()\r\n                            .trim()\r\n                            .includes(Search.toLocaleLowerCase().trim());\r\n                    })) || (category.name.toLocaleLowerCase().trim().includes(Search.toLocaleLowerCase().trim()));\r\n                })\r\n            );\r\n        } else {\r\n            setCategories(categoryArr);\r\n        }\r\n    }, [Search]);\r\n\r\n    const PassData = (Data) => {\r\n        props.Node(Data);\r\n        setActions(false);\r\n        setCategories(categoryArr);\r\n        setType(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        setType(\"\");\r\n        setActions(false);\r\n        setCategories(categoryArr)\r\n    }, [props.LeftSidebar])\r\n\r\n    return (\r\n        <div className=\"BotSidebar position-fixed\">\r\n            {(Type === \"\") && <div className=\"pl-3 pr-3\">\r\n                <h6 className=\"mb-3\">All Components</h6>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"SearchBar w-100 theme-text\"\r\n                    placeholder=\"Search\"\r\n                    style={{backgroundImage: `url(${SearchIcon})`}}\r\n                    onChange={handleSearch}\r\n                />\r\n                <hr className=\"mb-0\"/>\r\n                {(Search === '') && <h6 className=\"mb-3 mt-3\">Categories</h6>}\r\n            </div>}\r\n            {Categories.map(function (category, index) {\r\n                return (\r\n                    <div key={index}>\r\n                        <div className=\"pl-3 pr-3\">\r\n                            <div className=\"mb-0\" onClick={handleBack}>\r\n                                <div\r\n                                    className=\"d-flex cursor-pointer\"\r\n                                    onClick={() => {\r\n                                        Search === '' && setType(category.type);\r\n                                        Search === '' && setCategories(categoryArr.filter((Category) => {\r\n                                                return (category.type === Category.type)\r\n                                            }\r\n                                        ))\r\n                                    }}\r\n                                >\r\n                                    {/*{console.log(Type, Categories)}*/}\r\n                                    {(Type !== \"\") && <img src={BackGreyIcon} alt=\"BackGreyIcon\"/>}\r\n                                    {(Type === \"\") && (Search === '') && <img src={DatabaseIcon} alt=\"DatabaseIcon\"/>}\r\n                                    {(Search === '') ? <span\r\n                                        className=\"ml-3\"\r\n                                    >\r\n                                      {category.name}\r\n                                    </span> : <h6 className='mt-3'>{category.name}</h6>}\r\n                                    {(Type === \"\") && (Search === '') &&\r\n                                    <img className=\"ml-auto\" src={DropdownIcon} alt=\"DropdownIcon\"/>}\r\n                                    {/* add variables instead of hard coded values */}\r\n                                </div>\r\n                            </div>\r\n                            {(Type !== \"\") &&\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"SearchBar w-100 mt-3 theme-text\"\r\n                                placeholder=\"Search\"\r\n                                style={{backgroundImage: `url(${SearchIcon})`}}\r\n                            />\r\n                            }\r\n                            <ul\r\n                                className={\r\n                                    (Search === '') ? \"pl-0 mb-0 mt-4 position-relative\" : \"pl-0 mb-0\"\r\n                                }\r\n                            >\r\n                                {category.subCategories.map(function (subcategory, index) {\r\n                                    return ((category.type === Type) || (Search !== \"\")) && (\r\n                                        <div className='position-relative' key={index}>\r\n                                            <li\r\n                                                className=\"d-flex justify-content-between cursor-pointer\"\r\n                                                onClick={() => {\r\n                                                    setActions(true)\r\n                                                    //set the show actions property = true for the clicked subcategory and false for others\r\n                                                    Categories.forEach((Category) => {\r\n                                                        if (category.type === Category.type) {\r\n                                                            //  in the selected category , make the selected subcategory showAction true\r\n                                                            Category.subCategories.forEach((Subcategory) => {\r\n                                                                Subcategory.showActions = (subcategory.name === Subcategory.name)\r\n                                                            })\r\n                                                        } else {\r\n                                                            //in the other categories , set all the subcategory showActions to false\r\n                                                            Category.subCategories.forEach((Subcategory) => {\r\n                                                                Subcategory.showActions = false\r\n                                                            })\r\n                                                        }\r\n\r\n                                                    })\r\n                                                }}\r\n                                            >\r\n                                                <div className=\"d-flex\">\r\n                                                    <img src={DatabaseIcon} alt=\"DatabaseIcon\"/>\r\n                                                    <span className=\"theme-text ml-2\">\r\n                                                      {subcategory.name}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <img src={DropdownIcon} alt=\"DropdownIcon\"/>\r\n                                            </li>\r\n\r\n\r\n                                            {Actions && subcategory.showActions && (\r\n                                                <div className=\"p-3 pt-4 ActionStyle\">\r\n                                                    <img\r\n                                                        src={CloseIcon}\r\n                                                        className=\"cursor-pointer\"\r\n                                                        alt=\"CloseIcon\"\r\n                                                        onClick={() => setActions(false)}\r\n                                                    />\r\n                                                    <h6>\r\n                                                        <span>ACTIONS</span>\r\n                                                    </h6>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"SearchBar w-100 mb-3 theme-text pt-2 pb-2\"\r\n                                                        placeholder=\"Search\"\r\n                                                        style={{backgroundImage: `url(${SearchIcon})`}}\r\n                                                    />\r\n                                                    <ul className=\"pl-0 list-unstyled\">\r\n                                                        {subcategory.actions.map((action, index) => {\r\n                                                            return <li key={index} className='cursor-pointer' onClick={() => {\r\n                                                                //pass the selected category , subcategory and action data in props\r\n                                                                let passData = {\r\n                                                                    id: Math.floor(Math.random() * 40),\r\n                                                                    category: category.name,\r\n                                                                    component: subcategory.name,\r\n                                                                    action: action.name,\r\n                                                                    description: \"Add decription to the array first\"\r\n                                                                }\r\n                                                                PassData(passData);\r\n                                                            }\r\n                                                            }>{action.name}</li>;\r\n                                                        })}\r\n                                                    </ul>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n            <BotSidebarStyle/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BotSidebar;","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Sidebar\\index.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Bot-listing\\index.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Template-listing\\index.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Container\\BotDesigner\\index.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\BotSidebar\\style.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Header\\style.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Template-listing\\style.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\Sidebar\\style.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Container\\BotDesigner\\style.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Container\\ModuleHeading\\index.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Container\\ModuleCard\\index.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\BotRightSidebar\\index.js",["96"],"import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\n// style\r\nimport BotRightStyle from \"./style\";\r\n\r\n// Image\r\nimport Close from '../../Assets/images/close-icon.svg'\r\n\r\nfunction BotRightSidebar(props) {\r\n    const options = [{ value: \"localhost\", label: \"localhost\" }];\r\n    const [URL, setURL] = useState('')\r\n    const [error, setError] = useState('')\r\n    const [showOutputOptions, setOutputOptions] = useState(false)\r\n    const [event , setEvent] = useState(null)\r\n\r\n    function handleValidate(event) {\r\n        event.preventDefault();\r\n        fetch(`http://192.168.5.32:9006/api/v1/m-aa/rss/sample?url=${URL}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if(result.entries){\r\n                        var existing = JSON.parse(localStorage.getItem('output'));\r\n                        existing = existing ? existing : [];\r\n                        existing.push(...result.entries);\r\n                        localStorage.setItem('output', JSON.stringify(existing));\r\n                        props.closeSidebar();\r\n                    }else{\r\n                        setError(result.detail);\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n  return (\r\n    <div className=\"BotRightSidebar position-fixed pt-5\">\r\n      <h5 className=\"theme-text header text-capitalize pt-4 pl-3 pr-3 pb-3\">{props.node}</h5>\r\n      {/*<SwitchComponents nodeName={props.node} options={options} />*/}\r\n        {\r\n            props.node === \"select\" &&\r\n            <form className=\"pl-3 pr-3\">\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">Connection</label>\r\n                    <div className=\"row m-0\">\r\n                        <div className=\"col-9 pl-0\">\r\n                            <Select options={options} />\r\n                        </div>\r\n                        <div className=\"col-3 pl-0 pr-0 w-100\">\r\n                            <button className=\"btn btn-outline-primary w-100\">Add</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">Table</label>\r\n                    <Select options={options} />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <label className=\"theme-text font-weight-normal\">ID</label>\r\n                        <span className=\"charColor\">Varchar(40)</span>\r\n                    </div>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">\r\n                        Choose List of Text\r\n                    </label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <hr className=\"mt-4 mb-4\" />\r\n                <button className=\"btn sidebarButton text-white w-50 float-right\" >\r\n                    Validate\r\n                </button>\r\n            </form>\r\n        }\r\n        {\r\n            props.node === \"Watch\" &&\r\n            <form\r\n                onSubmit={(e) => handleValidate(e)}\r\n                className=\"pl-3 pr-3\"\r\n            >\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">URL</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                        onChange={(e) => { setURL(e.target.value) }}\r\n                        value={URL}\r\n                    />\r\n                    <p className='mb-0 mt-2 text-danger'>{error}</p>\r\n                </div>\r\n                <hr className=\"mt-4 mb-4\" />\r\n                <button className=\"btn sidebarButton text-white w-50 float-right\" onClick={(e) => handleValidate(e)} >\r\n                    Validate\r\n                </button>\r\n            </form>\r\n        }\r\n        {\r\n            props.node === \"Decision\" &&\r\n            <form className=\"pl-3 pr-3\">\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">\r\n                        Choose List of Text\r\n                    </label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className='mt-4'>\r\n                    <label className=\"theme-text font-weight-normal\">\r\n                        Choose Data\r\n                    </label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <hr className=\"mt-4 mb-4\" />\r\n                <button className=\"btn sidebarButton text-white w-50 float-right\" >\r\n                    Validate\r\n                </button>\r\n            </form>\r\n        }\r\n        {\r\n            props.node === \"Save News\" &&\r\n            <form className=\"pl-3 pr-3 position-relative\">\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">Title</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                        onFocus = {(e)=> {\r\n                            setOutputOptions (true)\r\n                            setEvent(e)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">Description</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                        onFocus = {(e)=> {\r\n                            setOutputOptions (true)\r\n                            setEvent(e)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">Link</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                        onFocus = {(e)=> {\r\n                            setOutputOptions (true)\r\n                            setEvent(e)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">Published DateTime</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                        onFocus = {(e)=> {\r\n                            setOutputOptions (true)\r\n                            setEvent(e)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <hr className=\"mt-4 mb-4\" />\r\n                <button className=\"btn sidebarButton text-white w-50 float-right\">\r\n                    Validate\r\n                </button>\r\n\r\n                { showOutputOptions && <OutputOptions event = {event} close={() => setOutputOptions(false)}/>}\r\n\r\n            </form>\r\n        }\r\n        {\r\n            props.node === \"Publish News to Portal\" &&\r\n            <form className=\"pl-3 pr-3\">\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">Title</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">Description</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">Link</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">Published DateTime</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <hr className=\"mt-4 mb-4\" />\r\n                <button className=\"btn sidebarButton text-white w-50 float-right\" >\r\n                    Validate\r\n                </button>\r\n            </form>\r\n        }\r\n        {\r\n            props.node === \"Save Matched News\" &&\r\n            <form className=\"pl-3 pr-3\">\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">Published DateTime</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">List of Matched Watchwords</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">List of Matched Assets</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <label className=\"theme-text font-weight-normal\">source</label>\r\n                    <input\r\n                        className=\"d-block w-100 sideInput theme-text pl-2\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <hr className=\"mt-4 mb-4\" />\r\n                <button className=\"btn sidebarButton text-white w-50 float-right\" >\r\n                    Validate\r\n                </button>\r\n            </form>\r\n        }\r\n      <BotRightStyle />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BotRightSidebar;\r\n\r\nconst AddInput = (e, key, props) => {\r\n    e.preventDefault();\r\n    props.event.target.value = key;\r\n}\r\n\r\nconst closeModal = (props) => {\r\n    props.close()\r\n}\r\n\r\n// modal to show the \"output\" for save news fields\r\nfunction OutputOptions(props) {\r\n\r\n    const objs = JSON.parse(localStorage.getItem('output'));\r\n    const responses = [];\r\n    objs.map((item, index) => {\r\n        const subitems = [];\r\n        for (const key in item) {\r\n            subitems.push(\r\n                {\r\n                    key: item[key]['displayName'],\r\n                    value: item[key]['value']\r\n                },\r\n            )\r\n        }\r\n        responses.push({\r\n            position: index,\r\n            data: subitems\r\n        });\r\n\r\n    })\r\n\r\n    return (\r\n        <div className=\"modal-dialog-centered OutputStyle d-block\">\r\n            <div className='modalHead'>\r\n                Select Data\r\n                <img className='cursor-pointer m-2' onClick={() => closeModal(props)} src={Close} alt='Close' />\r\n            </div>\r\n            <div className='list-wrap'>\r\n                {\r\n                    responses.map((topItem, topIndex) => {\r\n                        return <div className='d-flex listStyle'>\r\n                            <ul className='list-unstyled p-0 m-0 w-100'>\r\n                                <button className='mb-3 modalHeadButton'>\r\n                                    {topIndex + 1}\r\n                                </button>\r\n                                {\r\n                                    topItem.data.map((item, index) => {\r\n                                        return <li className='d-flex align-items-center mb-2' key={index}>\r\n                                            <button onClick={(e) => AddInput(e, item.key, props)} className='mb-0 modalButton'>{item.key}</button>\r\n                                            <p className='mb-0 pl-2 col-7 text-truncate'>{item.value}</p>\r\n                                        </li>\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Container\\ModuleHeading\\style.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Container\\ModuleCard\\style.js",[],"C:\\Users\\Diviners\\Desktop\\threearrow\\botsmith-v2\\botsmith\\src\\Components\\BotRightSidebar\\style.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":168,"column":8,"nodeType":"103","endLine":168,"endColumn":16,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":283,"column":28,"nodeType":"107","messageId":"108","endLine":283,"endColumn":30},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Categories'. Either include it or remove the dependency array. You can also do a functional update 'setCategories(C => ...)' if you only need 'Categories' in the 'setCategories' call.","ArrayExpression",["111"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [Categories, Search]",{"range":"114","text":"115"},[4534,4542],"[Categories, Search]"]